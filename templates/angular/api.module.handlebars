/* Create a factory in your app.module, something similiar to this:

  export function apiConfig(): Configuration {
    const params: ConfigurationParameters = {
      basePath: 'http://your-base-path',
      withCredentials: false
    };
    return new Configuration(params);
  }
  
  And use it in the imports section in your AppModule like this:
  
    ApiModule.forRoot(apiConfig)
*/

import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';
import { Configuration } from './configuration';
{{#if paths.length}}
import {
  {{#paths}}
  {{this.className}}{{#unless @last}},{{/unless}}
  {{/paths}}
} from './services'
{{/if}}

@NgModule({
  imports: [],
  declarations: [],
  exports: [],
  providers: [
	{{#paths}}
    {{this.className}}{{#unless @last}},{{/unless}}
    {{/paths}}
  ]
})
export class ApiModule {
  public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {
    return {
      ngModule: ApiModule,
      providers: [ { provide: Configuration, useFactory: configurationFactory } ]
    }
  }

  constructor( @Optional() @SkipSelf() parentModule: ApiModule, @Optional() http: HttpClient) {
    if (parentModule) {
      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');
    }
    if (!http) {
      throw new Error('You need to import the HttpClientModule in your AppModule! \n' +
      'See also https://github.com/angular/angular/issues/20575');
    }
  }
}